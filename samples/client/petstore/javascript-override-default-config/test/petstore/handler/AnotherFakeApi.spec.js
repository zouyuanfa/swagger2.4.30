/*
 * Swagger Petstore
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.6-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  var testDataFile = process.env.TEST_DATA_FILE
    ? process.env.TEST_DATA_FILE
    : 'C:\\source\\GitHub\\demonfiddler\\swagger-codegen\\samples\\client\\petstore\\javascript-override-default-config\\test\\test-data.json';
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', 'json-pointer', '../../assert-equals', '../../../js/petstore/index', testDataFile], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('json-pointer'), require('../../assert-equals'), require('../../../js/petstore/index'), require(testDataFile));
  } else {
    // Browser globals (root is window)
    // TODO: load browser test data from file. Maybe via FileSystem (Mozilla, chrome.fileSystem)?
    var testData = null;
    factory(root.expect, root.JsonPointer, root.assertEquals, root.SwaggerPetstore, testData);
  }
}(this, function(expect, pointer, assertEquals, SwaggerPetstore, testData) {
  'use strict';

  var instance;
  var testDataCache;

  function getTestData(pointer) {
    return testDataCache.get('/petstore/AnotherFakeApi' + pointer);
  }

  before(function() {
    testDataCache = pointer(testData);
  });


  beforeEach(function() {
    instance = new SwaggerPetstore.AnotherFakeApi();
  });

  describe('petstore', function() {
    describe('AnotherFakeApi', function() {
      describe('testSpecialTags', function() {
        it('should call testSpecialTags successfully', function(done) {
          var body = getTestData('/testSpecialTags/body');

          instance.testSpecialTags(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            let expected = getTestData('/testSpecialTags/response');
            assertEquals(expected, data);

            done();
          });
        });
      });
    });
  });

}));
