{
  "swagger": "2.0",
  "info": {
    "title": "财税云;资产;资产清理",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "FaClean"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/openapi/v2/fi/fa_clean": {
      "get": {
        "summary": "资产清理列表;资产清理单列表;1.0.4",
        "operationId": "FaClean_list",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CleanListReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "a=页大小;c=10.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "description": "a=当前页;c=1.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "start_bill_date",
            "description": "a=开始日期（格式：“yyyy-MM-dd”，为空表示不过滤），单据日期;c=2022-05-02.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_bill_date",
            "description": "a=结束日期（格式：“yyyy-MM-dd”，为空表示不过滤），单据日期;c=2022-05-02.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "FaClean"
        ]
      }
    },
    "/openapi/v2/fi/fa_clean_detail": {
      "get": {
        "summary": "资产清理详情;资产清理单详情;1.0.4",
        "operationId": "FaClean_detail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CleanDetailReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "a=单据ID;c=1;d=true.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "FaClean"
        ]
      }
    },
    "/openapi/v2/fi/fa_clean_save": {
      "post": {
        "summary": "资产清理保存;资产清理单保存;1.0.5",
        "operationId": "FaClean_save",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SaveReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CleanSaveRequest"
            }
          }
        ],
        "tags": [
          "FaClean"
        ]
      }
    }
  },
  "definitions": {
    "Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "CleanDetailReply": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "a=清理单ID;c=100001"
        },
        "period": {
          "type": "string",
          "title": "a=期间;c=1"
        },
        "creator_id": {
          "type": "string",
          "title": "a=制单人id;c=12345001"
        },
        "creator_number": {
          "type": "string",
          "title": "a=制单人编码;c=ZDR0001"
        },
        "creator_name": {
          "type": "string",
          "title": "a= 制单人名称;c=z"
        },
        "clean_type_id": {
          "type": "string",
          "title": "a=清理方式id;c=0001"
        },
        "clean_type_number": {
          "type": "string",
          "title": "a=清理方式编码;c=QLFS0001"
        },
        "clean_type_name": {
          "type": "string",
          "title": "a=清理方式名称;c=清理1"
        },
        "clean_amount": {
          "type": "string",
          "title": "a=清理费用;c=50"
        },
        "salvage_amount": {
          "type": "string",
          "title": "a=残值收入;c=20"
        },
        "clean_reason": {
          "type": "string",
          "title": "a=清理原因;c=2020-03-10"
        },
        "voucher_id": {
          "type": "string",
          "title": "a=凭证id，id值=0标识没有生成凭证，生成凭证不能修改和删除;c=0001"
        },
        "create_time": {
          "type": "string",
          "title": "a=创建时间;c=2020-03-10 16:36:24"
        },
        "bill_no": {
          "type": "string",
          "title": "a=单据编码;c=DBCK-20200310-00001"
        },
        "bill_date": {
          "type": "string",
          "title": "a=单据日期;c=2020-03-10;d=true"
        },
        "entry": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CleanDetailReply.Entry"
          },
          "title": "a=分录列表;b=100;c=[];d=false"
        }
      }
    },
    "CleanDetailReply.Entry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "a=分录id;c=1"
        },
        "seq": {
          "type": "integer",
          "format": "int32",
          "title": "a=序号;c=1"
        },
        "card_id": {
          "type": "string",
          "title": "a=资产ID;c=1;d=true"
        },
        "card_number": {
          "type": "string",
          "title": "a=资产编码;c=1;d=true"
        },
        "card_name": {
          "type": "string",
          "title": "a=资产名称;c=1;d=true"
        },
        "name": {
          "type": "string",
          "title": "a=资产名称（同cardid_name）;b=30;c=资产名称001"
        },
        "model": {
          "type": "string",
          "title": "a=规格型号;b=30;c=规格型号001"
        },
        "group_name": {
          "type": "string",
          "title": "a=资产类别名称;b=20;c=名称;d=false"
        },
        "group_id": {
          "type": "string",
          "title": "a=资产类别id;b=2147483647;c=1;d=false"
        },
        "group_number": {
          "type": "string",
          "title": "a=资产类别编码;b=30;c=001;d=false"
        },
        "original_value": {
          "type": "string",
          "title": "a=原值本位币合计金额 ;c=1"
        },
        "qty": {
          "type": "string",
          "title": "a=数量;c=50"
        },
        "acc_um_depr": {
          "type": "string",
          "title": "a=累计折旧 ;c=1"
        },
        "net_value": {
          "type": "string",
          "title": "a=净值 ;c=1"
        },
        "dec_pre_value": {
          "type": "string",
          "title": "a=减值准备 ;c=1"
        },
        "clean_qty": {
          "type": "string",
          "title": "a=清理数量;c=1;d=true"
        },
        "clean_original_value": {
          "type": "string",
          "title": "a=清理原值;c=1;d=true"
        },
        "clean_acc_um_depr": {
          "type": "string",
          "title": "a=清理累计折旧;c=1;d=true"
        },
        "clean_dec_pre_value": {
          "type": "string",
          "title": "a=清理减值准备;c=1;d=true"
        }
      }
    },
    "CleanListReply": {
      "type": "object",
      "properties": {
        "total_page": {
          "type": "integer",
          "format": "int32",
          "title": "a=总页数;b=1000;c=100"
        },
        "current_page_size": {
          "type": "integer",
          "format": "int32",
          "title": "a=当前页条数;b=100;c=1"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "a=总条数;b=999999;c=1"
        },
        "page_size": {
          "type": "integer",
          "format": "int32",
          "title": "a=每页条数;b=100;c=100"
        },
        "page": {
          "type": "integer",
          "format": "int32",
          "title": "a=当前页码;b=1000;c=1"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CleanListReply.Row"
          },
          "title": "a=数据行;b=999999;c=[]"
        }
      },
      "title": "科目列表查询返回对象"
    },
    "CleanListReply.Row": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "a=id;c=1"
        },
        "bill_no": {
          "type": "string",
          "title": "a=单据编码;c=001"
        },
        "creator_id": {
          "type": "string",
          "title": "a=制单人id;c=12345001"
        },
        "creator_number": {
          "type": "string",
          "title": "a=制单人编码;c=ZDR0001"
        },
        "creator_name": {
          "type": "string",
          "title": "a= 制单人名称;c=z"
        },
        "clean_type_id": {
          "type": "string",
          "title": "a=清理方式id;c=0001"
        },
        "clean_type_number": {
          "type": "string",
          "title": "a=清理方式编码;c=QLFS0001"
        },
        "clean_type_name": {
          "type": "string",
          "title": "a=清理方式名称;c=清理1"
        },
        "clean_amount": {
          "type": "string",
          "title": "a=清理费用;c=50"
        },
        "salvage_amount": {
          "type": "string",
          "title": "a=残值收入;c=20"
        },
        "clean_reason": {
          "type": "string",
          "title": "a=清理原因;c=2020-03-10"
        },
        "voucher_id": {
          "type": "string",
          "title": "a=凭证id，id值=0标识没有生成凭证，生成凭证不能修改和删除;c=0001"
        },
        "bill_date": {
          "type": "string",
          "title": "a=单据日期;c=2019-12-11;d=true"
        }
      },
      "title": "科目查询返回对象"
    },
    "CleanSaveRequest": {
      "type": "object",
      "properties": {
        "bill_no": {
          "type": "string",
          "title": "a=单据编码;c=DBCK-20200310-00001"
        },
        "bill_date": {
          "type": "string",
          "title": "a=单据日期;c=2020-03-10;d=true"
        },
        "clean_type_id": {
          "type": "string",
          "title": "a=清理方式id;c=0001;d=true"
        },
        "clean_amount": {
          "type": "string",
          "title": "a=清理费用;c=50"
        },
        "salvage_amount": {
          "type": "string",
          "title": "a=残值收入;c=20"
        },
        "clean_reason": {
          "type": "string",
          "title": "a=清理原因;c=2020-03-10"
        },
        "entry": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CleanSaveRequest.Entry"
          },
          "title": "a=分录列表;b=100;c=[];d=true"
        }
      }
    },
    "CleanSaveRequest.Entry": {
      "type": "object",
      "properties": {
        "card_id": {
          "type": "string",
          "title": "a=资产ID;c=1;d=true"
        },
        "clean_qty": {
          "type": "string",
          "title": "a=清理数量;c=1;d=true"
        }
      }
    },
    "SaveReply": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "a=单据id数组对象;c=[\"1\"];d=true"
        },
        "id_number_map": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "a=id与编码map;c={};d=true"
        }
      },
      "title": "保存返回id数组对象"
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Any"
          }
        }
      }
    }
  }
}
